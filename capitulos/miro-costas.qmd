---
output: html_document
editor_options: 
  chunk_output_type: console
---

# Datos

![](images/fisiografía.png)

[Characterization of Surface Evidence of Groundwater Flow Systems](https://www.mdpi.com/2073-4441/12/9/2459)

## Agenda

```{r}
library(officer)
library(stringr)

#setwd("C:/Users/equih/1 Nubes/OneDrive/Costas-arenosas/prueba-oct/capitulos")

texto <- read_docx("Agenda Taller.docx")
texto <- docx_summary(texto)$text

actividades <- as.data.frame(texto[7:51])
```

La reunión de inició del proyecto: *`r texto[1]`*, se realizó del `r str_remove(texto[5], "Fechas: ")`.

```{r}
library(DT)

actividades %>% datatable()
```


## Miro

### Construcción colaborativa de Redes Bayesianas

::: {layout-ncol="2"}
La propuesta que hacemos es usar *Miro* como plataforma de debate y construcción de concenso. Buscamos así aproximarnos a la estructura causal que vincula las variables que determinan el rendimiento y la sustentabilidad (social, económica y ambiental). Una vez resuelta esta etapa, es necesario transferir lo acordado en *Miro* a plataformas de análisis estadístico. Aquí, nos propusimos trasladar los resultados de *Miro* a *R*. Al hacer esto las posibilidades analíticas se potencian muy ampliamente. Como veremos, podemos recurrir a `dagitty` o incluso utilizar *Python* y *Netica*. Para hacer esto optamos por la ruta de acceso commputacional [a través de la interfase "REST"](https://developers.miro.com/reference). Esto implica usar la biblioteca `httr` en *R*.

![](Images/colaboración.png)
:::

Hemos preparado una biblioteca con las rutinas que se describen aquí, para que las puedan usar según se requiera. Para descargarlas usa el botón que sigue.

\

```{r biblio_miro2Bayes, echo=FALSE, message=FALSE, warning=FALSE, include=TRUE}

downloadthis::download_link(
      link = "https://github.com/equihuam/miro2bayesNet",
      button_label = "Descarga la biblioteca miro2bayes",
      button_type = "info",
      has_icon = TRUE,
      icon = "fa fa-save",
      self_contained = FALSE)

```

\

### Acceder a **Miro**

En preparación para interactuar con **Miro** se requiere tener permisos de acceso de acuerdo con las [especificaciones que se dan aquí](https://developers.miro.com/reference/scopes). Estas credenciales hay que evitar distribuirlas. Por consiguiente, para hacerlo hemos recurrido a la biblioteca `keyring` para mantenerlas confidenciales. Esta biblioteca permite utilizar el sistema de seguridad del equipo para la gestión de las claves. Para dar de alta una llave utilicé en este caso la instrucción siguiente, necesitarás dos identificadores de tu preferencia que deberán ir entrecomillados:

`key_set(service = "[referencia de tu preferencia]", username = "[identificador de tu gusto]")`

Una vez registrada en el equipo la llave, queda lista para su uso en cualquier momento en esa máquina .


```{r} 
#| label: Miro_usuario
#| echo: true
#| message: false
#| warning: false

if (!require(miro2bayes))
{
  library(devtools)
  install_github("equihuam/miro2bayesNet", force = TRUE)
}

library(miro2bayes)
library(bnlearn)
library(bnviewer)
library(tidyverse, quietly = TRUE, warn.conflicts = FALSE)

tableros <- miroBoards(servMiro = "miro", user = "miguel-edu-token")
tableros[, c("name", "id")]

tablero_tr <- tableros %>%
              filter(str_detect(name, "Costa")) %>%
              select(id, name)

datos_miro <- getMiro(servMiro = "miro", user = "miguel-edu-token",
                        board = tablero_tr)

miroValidation(datos_miro)

#neticaMiro <- miro2DNE(datos_miro)

#write(neticaMiro, "costa-arenosa.dne")

netMiro_bn <- miro2bnlearn(datos_miro)
netMiro_bn

variables <- tibble(var = datos_miro$nodes$var)

graphviz.plot(netMiro_bn, layout = "dot")

```

La lista de variables identificadas es:

```{r}
#| label: lista_vars
#| echo: false


library(DT)
datos_miro$nodes %>% 
  select(text, var, color) %>% 
  datatable(rownames = FALSE, width = "90%",
            options = list(
              headerCallback = DT::JS(
                "function(thead) {",
                "  $(thead).css('font-size', '70%');", "}"))) %>% 
  formatStyle(columns = 1:3, fontSize = "70%")

```
